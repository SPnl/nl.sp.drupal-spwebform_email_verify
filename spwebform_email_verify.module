<?php

function spwebform_email_verify_webform_validation_validators() {
  $validators = array(
    'webform_email_verify' => array(
      'name' => t('SP webform email verify'),
      'description' => t('First it checks if the domain/host part of the e-mail exists at all, and reports an error if it does not. Second, it tries to validate the user name too, by sending a HELO/MAIL FROM/RCPT TO chain of commands to the SMTP servers for the found host.'),
      'component_types' => array(
        'email',
      ),
    ),
  );
  return $validators;
}
     
function spwebform_email_verify_webform_validation_validate($validator_name, $items, $components, $rule) {
  if (!empty($items) && $validator_name === 'webform_email_verify') {
    $errors = array();
    foreach ($items as $key => $val) {
      $result = _sp_email_verify_check($val);
      if ($result !== NULL) {
        $errors[$key] = t('%item is geen bestaand e-mailadres. Controleer op tikfouten. Weet je zeker dat het e-mailadres correct is, geef dit dan door aan webmaster@sp.nl', array('%item' => $components[$key]['name']));
        watchdog('spwebform_email_verify', $result, array(), WATCHDOG_NOTICE);
      }
    }
    return $errors;
  }
}

/**
 * This is a hacked version from the check function in the email_verify module
 * to allow online.nl addresses.
 *
 * Checks the email address for validity.
 */
function _sp_email_verify_check($mail) {
  if (!valid_email_address($mail)) {
    // The address is syntactically incorrect.
    // The problem will be caught by the 'user' module anyway, so we avoid
    // duplicating the error reporting here, just return.
    return;
  }

  module_load_include('inc', 'email_verify', 'windows_compat');

  $host = drupal_substr(strchr($mail, '@'), 1);

  // Exclude domains from check.
  if (in_array($host, array(
    'hotmail.com',
    'hotmail.nl',
    'outlook.com',
    'live.nl',
    'live.com',
    'msn.com ',
  ))) {
    watchdog('spwebform_email_verify', 'Skipped check for Microsoft host: @host', array('@host' => $host));
    return;
  }

  // Let's see if we can find anything about this host in the DNS.
  if (!checkdnsrr($host . '.', 'MX') && !checkdnsrr($host . '.', 'ANY')) {
    $params = array('to' => 'Not a valid host.', 'mail' => $mail);
    $language = language_default();
    drupal_mail('spwebform_email_verify', 'spwebform_email_verify_error', 'webmaster@sp.nl', $language, $params, NULL, TRUE);
    return t('%host is not a valid email host. Please check the spelling and try again.', array('%host' => "$host"));
  }

  // If install found port 25 closed or fsockopen() disabled, we can't test
  // mailboxes.
  If (variable_get('email_verify_skip_mailbox', FALSE)) {
    return;
  }

  // What SMTP servers should we contact?
  $mx_hosts = array();
  if (!getmxrr($host, $mx_hosts)) {
    // When there is no MX record, the host itself should be used.
    $mx_hosts[] = $host;
  }

  // Try to connect to one SMTP server.
  foreach ($mx_hosts as $smtp) {

    $connect = @fsockopen($smtp, 25, $errno, $errstr, 15);

    if (!$connect) {
      continue;
    }

    if (preg_match("/^220/", $out = fgets($connect, 1024))) {
      // An SMTP connection was made.
      break;
    }
    else {
      // The SMTP server probably does not like us (dynamic/residential IP for
      // aol.com for instance).
      // Be on the safe side and accept the address, at least it has a valid
      // domain part.
      watchdog('spwebform_email_verify', 'Could not verify email address (' . $mail . ')at host @host: @out', array('@host' => $host, '@out' => $out));
      return;
    }
  }

  if (!$connect) {
    return t('%host is not a valid email host. Please check the spelling and try again or contact us for clarification.', array('%host' => "$host"));
  }

  $from = variable_get('site_mail', ini_get('sendmail_from'));

  // Extract the <...> part, if there is one.
  if (preg_match('/\<(.*)\>/', $from, $match) > 0) {
    $from = $match[1];
  }

  // Should be good enough for RFC compliant SMTP servers.
  $localhost = $_SERVER["HTTP_HOST"];
  if (!$localhost) {
    $localhost = 'localhost';
  }

  fputs($connect, "HELO $localhost\r\n");
  $out = fgets($connect, 1024);
  fputs($connect, "MAIL FROM: <$from>\r\n");
  $from = fgets($connect, 1024);
  fputs($connect, "RCPT TO: <{$mail}>\r\n");
  $to = fgets($connect, 1024);
  fputs($connect, "QUIT\r\n");
  fclose($connect);

  if (!preg_match("/^250/", $from)) {
    // Again, something went wrong before we could really test the address.
    // Be on the safe side and accept it.
    watchdog('spwebform_email_verify', 'Could not verify email address (' . $mail . ') at host @host: @from', array('@host' => $host, '@from' => $from));
    return;
  }

  if (
      // This server does not like us (noos.fr behaves like this for instance).
      preg_match("/(Client host|Helo command) rejected/", $to) ||


      /*
       * Custom modification, added Protocol error to accept email@online.nl adresses.
       * Thomas de Graaff
       */
      preg_match("/Protocol error/", $to) || // Allow online.nl
      preg_match("/reylisted/", $to) || // Allow servers that use greylisting.

      // Any 4xx error also means we couldn't really check except 450, which is
      // explcitely a non-existing mailbox: 450 = "Requested mail action not
      // taken: mailbox unavailable".
      preg_match("/^4/", $to) && !preg_match("/^450/", $to)) {
    // In those cases, accept the email, but log a warning.
    watchdog('spwebform_email_verify', 'Could not verify email address (' . $mail . ') at host @host: @to', array('@host' => $host, '@to' => $to));
    return;
  }

  if (!preg_match("/^250/", $to)) {
    watchdog('spwebform_email_verify', 'Rejected email address: @mail. Reason: @to', array('@mail' => $mail, '@to' => $to));
    $params = array('to' => $to, 'mail' => $mail);
    $language = language_default();
    drupal_mail('spwebform_email_verify', 'spwebform_email_verify_error', 'webmaster@sp.nl', $language, $params, NULL, TRUE);
    return t('%mail is not a valid email address. Please check the spelling and try again or contact us for clarification.', array('%mail' => "$mail"));
  }

  // Everything is OK, so don't return anything.
  return;
}

function spwebform_email_verify_mail($key, &$message, $params) {
  $message['headers']['Content-Type'] = 'text/html; charset=UTF-8; format=flowed';
  switch ($key) {
  case 'spwebform_email_verify_error':
    $message['subject'] = 'SP Email verify: adres kon niet worden gecontroleerd';
    $message['body'][] = t('Rejected email address: @mail. Reason: @to', array('@mail' => $params['mail'], '@to' => $params['to']));
  }
}
